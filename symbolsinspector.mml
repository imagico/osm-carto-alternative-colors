scale: 1
metatile: 2
name: OpenStreetMap Carto script processed symbols
description: Symbol inspector for OSM-Carto alternative colors
bounds: &world
  - -180
  - -85.05112877980659
  - 180
  - 85.05112877980659
center:
  - 0
  - 0
  - 4
format: png
interactivity: false
minzoom: 0
maxzoom: 8
srs: "+proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0.0 +k=1.0 +units=m +nadgrids=@null +wktext +no_defs +over"

# Various parts to be included later on
_parts:
  # Extents are used for tilemill, and don't actually make it to the generated XML
  extents: &extents
    extent: *world
    srs-name: "900913"
    srs: "+proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0.0 +k=1.0 +units=m +nadgrids=@null +wktext +no_defs +over"
  extents84: &extents84
    extent: *world
    srs-name: "WGS84"
    srs: "+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs"
  osm2pgsql: &osm2pgsql
    type: "postgis"
    dbname: "gis"
    key_field: ""
    geometry_field: "way"
    extent: "-20037508,-20037508,20037508,20037508"

Stylesheet:
  - style/symbolsinspector.mss
Layer:
  - id: tree_symbols_compact
    geometry: polygon
    <<: *extents
    Datasource:
      <<: *osm2pgsql
      table: |-
        (SELECT
            ST_Translate(
              way,
              ST_X(point),
              ST_Y(point)
            ) AS way
          FROM
            (SELECT
                way,
                CASE
                  WHEN ((symbol_size % 2) = 0) THEN
                       ST_SnapToGrid(
                         point,
                         NULLIF(!scale_denominator!*0.001*0.28,0), NULLIF(!scale_denominator!*0.001*0.28,0))
                  ELSE
                       ST_SnapToGrid(
                         point,
                         0.5*NULLIF(!scale_denominator!*0.001*0.28,0), 0.5*NULLIF(!scale_denominator!*0.001*0.28,0),
                         NULLIF(!scale_denominator!*0.001*0.28,0), NULLIF(!scale_denominator!*0.001*0.28,0))
                END
                AS point
              FROM (SELECT
                  ST_TransScale(
                    way,
                    -width*0.5,
                    -height*0.5,
                    NULLIF(!scale_denominator!*0.001*0.28,0),
                    NULLIF(!scale_denominator!*0.001*0.28,0)
                  ) AS way,
                  ST_Point(
                    -256*NULLIF(!scale_denominator!*0.001*0.28,0)
                    -((CASE
                      WHEN leaf_type IN ('broadleaved') THEN 1*(3 + 2.0/50)
                      WHEN leaf_type IN ('needleleaved') THEN 2*(3 + 2.0/50)
                      WHEN leaf_type IN ('palm') THEN 3*(3 + 2.0/50)
                      ELSE 0
                    END +
                    CASE
                      WHEN leaf_cycle IN ('evergreen') THEN 1
                      WHEN leaf_cycle IN ('deciduous') THEN 2
                      ELSE 0
                    END)*50)*NULLIF(!scale_denominator!*0.001*0.28,0),
                    (SELECT SUM(CASE WHEN (g > 17) AND (g % 2) = 0 THEN 0 ELSE g+2 END) FROM generate_series(1, symbol_size) AS g)*NULLIF(!scale_denominator!*0.001*0.28,0)
                  ) AS point,
                  name,
                  symbol_size
                FROM carto_symbols
                WHERE feature_type = 'tree' AND (symbol_size < 18 OR (symbol_size % 2) != 0)
              ) AS _
            ) AS features
        ) AS tree_symbols
    properties:
      minzoom: 0
  - id: tree_symbols
    geometry: polygon
    <<: *extents
    Datasource:
      <<: *osm2pgsql
      table: |-
        (SELECT
            ST_Translate(
              way,
              ST_X(point),
              ST_Y(point)
            ) AS way
          FROM
            (SELECT
                way,
                CASE
                  WHEN ((symbol_size % 2) = 0) THEN
                       ST_SnapToGrid(
                         point,
                         NULLIF(!scale_denominator!*0.001*0.28,0), NULLIF(!scale_denominator!*0.001*0.28,0))
                  ELSE
                       ST_SnapToGrid(
                         point,
                         0.5*NULLIF(!scale_denominator!*0.001*0.28,0), 0.5*NULLIF(!scale_denominator!*0.001*0.28,0),
                         NULLIF(!scale_denominator!*0.001*0.28,0), NULLIF(!scale_denominator!*0.001*0.28,0))
                END
                AS point
              FROM (SELECT
                  ST_TransScale(
                    way,
                    -width*0.5,
                    -height*0.5,
                    NULLIF(!scale_denominator!*0.001*0.28,0),
                    NULLIF(!scale_denominator!*0.001*0.28,0)
                  ) AS way,
                  ST_Point(
                    ((CASE
                      WHEN leaf_type IN ('broadleaved') THEN 4
                      WHEN leaf_type IN ('needleleaved') THEN 8
                      WHEN leaf_type IN ('palm') THEN 12
                      ELSE 0
                    END +
                    CASE
                      WHEN leaf_cycle IN ('evergreen') THEN 1
                      WHEN leaf_cycle IN ('deciduous') THEN 2
                      ELSE 0
                    END)*256)*NULLIF(!scale_denominator!*0.001*0.28,0),
                    (SELECT SUM(g+2) FROM generate_series(1, symbol_size) AS g)*NULLIF(!scale_denominator!*0.001*0.28,0)
                  ) AS point,
                  name,
                  symbol_size
                FROM carto_symbols
                WHERE feature_type = 'tree'
              ) AS _
            ) AS features
        ) AS tree_symbols
    properties:
      minzoom: 0
  - id: labels_tree
    geometry: point
    <<: *extents
    Datasource:
      <<: *osm2pgsql
      table: |-
        (SELECT
            way,
            CONCAT(name, ' (', symbol_size::text, ')') AS name
          FROM (SELECT
                  ST_Point(
                    ((CASE
                      WHEN leaf_type IN ('broadleaved') THEN 4
                      WHEN leaf_type IN ('needleleaved') THEN 8
                      WHEN leaf_type IN ('palm') THEN 12
                      ELSE 0
                    END +
                    CASE
                      WHEN leaf_cycle IN ('evergreen') THEN 1
                      WHEN leaf_cycle IN ('deciduous') THEN 2
                      ELSE 0
                    END)*256-width*0.5-6)*NULLIF(!scale_denominator!*0.001*0.28,0),
                    (SELECT SUM(g+2) FROM generate_series(1, symbol_size) AS g)*NULLIF(!scale_denominator!*0.001*0.28,0)
                  ) AS way,
              name,
              symbol_size
            FROM carto_symbols
            WHERE feature_type = 'tree'
          ) AS features
        ) AS labels_tree
    properties:
      minzoom: 0
  - id: peak_symbols
    geometry: polygon
    <<: *extents
    Datasource:
      <<: *osm2pgsql
      table: |-
        (SELECT
            ST_Translate(
              way,
              ST_X(point),
              ST_Y(point)
            ) AS way
          FROM
            (SELECT
                way,
                CASE
                  WHEN ((symbol_size % 2) = 0) THEN
                       ST_SnapToGrid(
                         point,
                         NULLIF(!scale_denominator!*0.001*0.28,0), NULLIF(!scale_denominator!*0.001*0.28,0))
                  ELSE
                       ST_SnapToGrid(
                         point,
                         0.5*NULLIF(!scale_denominator!*0.001*0.28,0), 0.5*NULLIF(!scale_denominator!*0.001*0.28,0),
                         NULLIF(!scale_denominator!*0.001*0.28,0), NULLIF(!scale_denominator!*0.001*0.28,0))
                END
                AS point
              FROM (SELECT
                  ST_TransScale(
                    way,
                    -width*0.5,
                    -height*0.5,
                    NULLIF(!scale_denominator!*0.001*0.28,0),
                    NULLIF(!scale_denominator!*0.001*0.28,0)
                  ) AS way,
                  ST_Point(
                    20*NULLIF(!scale_denominator!*0.001*0.28,0) +
                    (symbol_size*38)*NULLIF(!scale_denominator!*0.001*0.28,0),
                    -90*NULLIF(!scale_denominator!*0.001*0.28,0)
                  ) AS point,
                  name,
                  symbol_size
                FROM carto_symbols
                WHERE feature_type = 'peak'
              ) AS _
            ) AS features
        ) AS peak_symbols
    properties:
      minzoom: 0
  - id: viewpoint_symbols
    geometry: polygon
    <<: *extents
    Datasource:
      <<: *osm2pgsql
      table: |-
        (SELECT
            ST_Translate(
              way,
              ST_X(point),
              ST_Y(point)
            ) AS way
          FROM
            (SELECT
                way,
                CASE
                  WHEN ((symbol_size % 2) = 0) THEN
                       ST_SnapToGrid(
                         point,
                         NULLIF(!scale_denominator!*0.001*0.28,0), NULLIF(!scale_denominator!*0.001*0.28,0))
                  ELSE
                       ST_SnapToGrid(
                         point,
                         0.5*NULLIF(!scale_denominator!*0.001*0.28,0), 0.5*NULLIF(!scale_denominator!*0.001*0.28,0),
                         NULLIF(!scale_denominator!*0.001*0.28,0), NULLIF(!scale_denominator!*0.001*0.28,0))
                END
                AS point
              FROM (SELECT
                  ST_TransScale(
                    way,
                    -width*0.5,
                    -height*0.5,
                    NULLIF(!scale_denominator!*0.001*0.28,0),
                    NULLIF(!scale_denominator!*0.001*0.28,0)
                  ) AS way,
                  ST_Point(
                    -512*NULLIF(!scale_denominator!*0.001*0.28,0) +
                    ((CASE
                      WHEN symbol_size = 14 THEN 0
                      WHEN symbol_size = 15 THEN 1
                      WHEN symbol_size = 16 THEN 2
                      WHEN symbol_size = 17 THEN 3
                      WHEN symbol_size = 18 THEN 4
                      WHEN symbol_size = 19 THEN 5
                      WHEN symbol_size = 20 THEN 6
                      WHEN symbol_size = 21 THEN 7
                      WHEN symbol_size = 22 THEN 8
                      WHEN symbol_size = 23 THEN 9
                      WHEN symbol_size = 24 THEN 10
                      ELSE 12
                    END)*38)*NULLIF(!scale_denominator!*0.001*0.28,0),
                    (-60-angle*2.5)*NULLIF(!scale_denominator!*0.001*0.28,0)
                  ) AS point,
                  name,
                  symbol_size
                FROM carto_symbols
                WHERE feature_type = 'viewpoint' AND angle != 1
              ) AS _
            ) AS features
        ) AS viewpoint_symbols
    properties:
      minzoom: 0
  - id: labels_viewpoint_x
    geometry: point
    <<: *extents
    Datasource:
      <<: *osm2pgsql
      table: |-
        (SELECT
            way,
            symbol_size::text AS name
          FROM (SELECT
                  ST_Point(
                    -512*NULLIF(!scale_denominator!*0.001*0.28,0) +
                    ((CASE
                      WHEN symbol_size = 14 THEN 0
                      WHEN symbol_size = 15 THEN 1
                      WHEN symbol_size = 16 THEN 2
                      WHEN symbol_size = 17 THEN 3
                      WHEN symbol_size = 18 THEN 4
                      WHEN symbol_size = 19 THEN 5
                      WHEN symbol_size = 20 THEN 6
                      WHEN symbol_size = 21 THEN 7
                      WHEN symbol_size = 22 THEN 8
                      WHEN symbol_size = 23 THEN 9
                      WHEN symbol_size = 24 THEN 10
                      ELSE 12
                    END)*38+15-width*0.5)*NULLIF(!scale_denominator!*0.001*0.28,0),
                    -40*NULLIF(!scale_denominator!*0.001*0.28,0)
                  ) AS way,
              symbol_size
            FROM carto_symbols
            WHERE feature_type = 'viewpoint' AND angle != 1
          ) AS features
        ) AS labels_viewpoint_x
  - id: labels_viewpoint_y
    geometry: point
    <<: *extents
    Datasource:
      <<: *osm2pgsql
      table: |-
        (SELECT
            way,
            angle::text AS name
          FROM (SELECT
                  ST_Point(
                    -550*NULLIF(!scale_denominator!*0.001*0.28,0),
                    (-58-angle*2.5)*NULLIF(!scale_denominator!*0.001*0.28,0)
                  ) AS way,
              angle
            FROM carto_symbols
            WHERE feature_type = 'viewpoint' AND angle != 1
          ) AS features
        ) AS labels_viewpoint_y
    properties:
      minzoom: 0
