# ---------------------------------------------------------------------------
#  roads.mml
#
#  main roads layer
#
#  to be processed with assemble_project.py
#
#  Copyright 2012-2023 by OSM-Carto contributors
#  Copyright 2017-2024 by Christoph Hormann <chris_hormann@gmx.de>
# ---------------------------------------------------------------------------
#  This file is part of the OSM-Carto alternative colors map style.
#
#  OSM-Carto alternative colors is an open design and free software project
#  You can use, modify and/or redistribute it under the terms of the
#  following licenses:
#
#  Design components of the project are subject to the Creative Commons
#  Attribution ShareAlike 4.0 (CC BY-SA 4.0) License.
#
#  Software components of the project are subject to the GNU Affero General
#  Public License published by the Free Software Foundation, either
#  version 3 of the License, or (at your option) any later version.
#
#  OSM-Carto alternative colors is distributed in the hope that it will be
#  useful, but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero
#  General Public License and the Creative Commons Attribution ShareAlike
#  4.0 (CC BY-SA 4.0) License for more details.
#
#  You should have received a copy of the Creative Commons Attribution
#  ShareAlike 4.0 (CC BY-SA 4.0) License along with OSM-Carto alternative
#  colors. If not, see
#  <https://creativecommons.org/licenses/by-sa/4.0/legalcode>.
#
#  You should have also received a copy of the GNU Affero General Public
#  License. If not, see <https://www.gnu.org/licenses/>.
# ---------------------------------------------------------------------------
  - id: roads
    <<: *extents
    Datasource:
      <<: *osm2pgsql
      geometry_table: planet_osm_line
      # This is one of the most complex layers, so it bears explaining in some detail
      # It is necessary to
      # - Have roads and railways in the same layer to get ordering right
      # - Return two linestrings for ways which are both a road and railway
      # - Compute z_order here, rather than rely on osm2pgsql z_order
      table: &roads_sql |-
        (SELECT
            way,
            road_layer,
            feature,
            path_type,
            intermittent,
            seasonal,
            int_surface,
            int_tunnel,
            int_bridge,
            int_lanes,
            int_access,
            construction,
            service,
            link,
            tc_type,
            width_lane,
            width_nominal,
            width_max,
            width,
            casing_width
          FROM ( -- this wraps all the different road sublayers, most of which are mostly sourced from the same CTEs (roads_all, road_areas_all, tc_all)
            WITH roads_all AS -- roads_all is based on the classic roads-casing/roads-fill/bridges layers + junction polygons
            (SELECT
                way,
                (CASE WHEN substr(feature, length(feature)-4, 5) = '_link' THEN substr(feature, 0, length(feature)-4) ELSE feature END) AS feature,
                path_type,
                int_surface,
                int_tunnel,
                int_bridge,
                int_lane,
                int_lanes,
                int_junction,
                int_access,
                construction,
                service,
                link,
                width_lane,
                width_nominal,
                GREATEST(width_nominal, width_tagged) AS width_max,
                CASE WHEN (width_tagged > width_nominal) THEN width_tagged ELSE 0.0 END AS width,
                casing_width,
                layernotnull,
                osm_id,
                z_order
              FROM ( -- begin "features" subselect that contains both roads and rail/aero
                WITH highways_raw AS
                -- this queries all roads from the database together with the corresponding width values
                -- to be used both directly and for the sidewalk geometries
                (
                  @@include(roads/highways_raw.sql)
                ), -- end highways_raw CTE
              @@if(road_basic)
                @@include(roads/junctions-dummy.sql)
              @@else
                @@include(roads/junctions.sql)
              @@end
                highways_all AS
                (SELECT
                    ST_Difference(
                      h.way,
                      COALESCE(
                        j.bounds,
                        ST_SetSRID('GEOMETRYCOLLECTION EMPTY'::geometry, 3857)
                      )
                    ) AS way,
                    h.way AS way_orig,
                    j.clip AS clip,
                    h.feature AS feature,
                    h.highway AS highway,
                    h.path_type AS path_type,
                    h.int_surface AS int_surface,
                    h.int_tunnel AS int_tunnel,
                    h.int_bridge AS int_bridge,
                    h.int_lane_right AS int_lane_right,
                    h.int_lane_left AS int_lane_left,
                    h.int_lanes AS int_lanes,
                    h.int_side_right AS int_side_right,
                    h.int_side_left AS int_side_left,
                    h.int_access AS int_access,
                    h.construction AS construction,
                    h.service AS service,
                    h.link AS link,
                    h.width_lane AS width_lane,
                    h.width_lane_cycle AS width_lane_cycle,
                    h.width_nominal AS width_nominal,
                    h.width_tagged AS width_tagged,
                    carto_casing_line_width(h.highway, h.int_bridge, z(!scale_denominator!)) AS casing_width,
                    h.layernotnull AS layernotnull,
                    h.osm_id AS osm_id,
                    h.z_order AS z_order
                  FROM highways_raw h
                  LEFT JOIN
                    (SELECT
                        ST_Union(bounds) AS bounds,
                        ST_Union(clip) AS clip,
                        osm_id
                      FROM junctions GROUP BY osm_id
                    ) AS j
                    ON j.osm_id = h.osm_id
                ), -- end highways_all CTE
              @@if(ac)
                @@include(roads/sidewalks-cte.sql)
                @@include(roads/sidewalks.sql)
                UNION ALL
                @@include(roads/lanes.sql)
              @@else
                @@include(roads/sidewalks-dummy.sql)
              @@end
                UNION ALL
                SELECT -- begin of main road select
                    way,
                    feature,
                    path_type,
                    int_surface,
                    int_tunnel,
                    int_bridge,
                    'no' AS int_lane,
                    int_lanes,
                    'no' AS int_junction,
                    int_access,
                    construction,
                    service,
                    link,
                    width_lane,
                    width_nominal,
                    width_tagged,
                    casing_width,
                    layernotnull,
                    osm_id,
                    z_order
                  FROM highways_all
                  -- end of main road select
                UNION ALL
                SELECT -- begin of junction polygons select
                    way,
                    feature,
                    path_type,
                    int_surface,
                    int_tunnel,
                    int_bridge,
                    'no' AS int_lane,
                    int_lanes,
                    'yes' AS int_junction,
                    int_access,
                    construction,
                    service,
                    link,
                    0 AS width_lane,
                    width_nominal,
                    width_tagged,
                    casing_width,
                    layernotnull,
                    osm_id,
                    z_order
                  FROM junctions
                  -- end of junction polygons select
                UNION ALL
              @@if(road_basic)
                @@include(roads/fords-dummy.sql)
              @@else
                @@include(roads/fords.sql)
              @@end
                UNION ALL
                @@include(roads/rail_aero.sql)
              ) AS roads_features
            ), -- end of roads_all CTE
            road_areas_all AS
            (
              @@include(roads/road_areas.sql)
            ), -- end of road_areas_all CTE
            tc_all AS
            (
              @@include(roads/tc.sql)
            ), -- end of tc_all CTE
            line_barriers_all AS
            (
            @@if(ac)
              @@include(roads/line-barriers.sql)
            @@else
              @@include(roads/line-barriers-simple.sql)
            @@end
            ) -- end of line_barriers_all CTE
            SELECT -- casing
                way,
                'casing' AS road_layer,
                feature,
                path_type,
                'no' AS intermittent,
                'no' AS seasonal,
                int_surface,
                int_tunnel,
                int_bridge,
                int_lanes,
                int_access,
                construction,
                service,
                link,
                'null' AS tc_type,
                width_lane,
                width_nominal,
                width_max,
                width,
                casing_width,
                layernotnull,
                osm_id,
                z_order
              FROM roads_all
              WHERE int_junction = 'no' AND int_lane = 'no'
            UNION ALL
            SELECT -- background
                way,
                'background' AS road_layer,
                feature,
                path_type,
                'no' AS intermittent,
                'no' AS seasonal,
                int_surface,
                int_tunnel,
                int_bridge,
                int_lanes,
                int_access,
                construction,
                service,
                link,
                'null' AS tc_type,
                width_lane,
                width_nominal,
                width_max,
                width,
                casing_width,
                layernotnull,
                osm_id,
                z_order
              FROM roads_all
              WHERE int_junction = 'no' AND int_lane = 'no'
            UNION ALL
            SELECT -- background_unpaved
                ST_Buffer(way, 0.5*(width_max - 2.0*casing_width)*NULLIF(!scale_denominator!*0.001*0.28,0)) AS way,
                'background_unpaved' AS road_layer,
                feature,
                path_type,
                'no' AS intermittent,
                'no' AS seasonal,
                int_surface,
                int_tunnel,
                int_bridge,
                int_lanes,
                int_access,
                construction,
                service,
                link,
                'null' AS tc_type,
                width_lane,
                width_nominal,
                width_max,
                width,
                casing_width,
                layernotnull,
                osm_id,
                z_order
              FROM roads_all
              WHERE int_junction = 'no'
                AND int_tunnel = 'no'
                AND int_surface = 'unpaved'
                AND int_lane = 'no'
                AND width >= 0.0
                AND
                  -- this is all the roads with a fill that is patterened for unpaved roads - only at high zoom and rendered as background
                  feature IN ('highway_bridleway', 'highway_footway', 'highway_cycleway', 'highway_path', 'highway_track')
                AND z(!scale_denominator!) >= 18
            UNION ALL
            SELECT -- fill
                way,
                'fill' AS road_layer,
                feature,
                path_type,
                'no' AS intermittent,
                'no' AS seasonal,
                int_surface,
                int_tunnel,
                int_bridge,
                int_lanes,
                int_access,
                construction,
                service,
                link,
                'null' AS tc_type,
                width_lane,
                width_nominal,
                width_max,
                width,
                casing_width,
                layernotnull,
                osm_id,
                z_order
              FROM roads_all
              WHERE int_junction = 'no' AND int_lane = 'no'
            UNION ALL
            SELECT -- fill_unpaved
                CASE
                  WHEN feature IN ('aeroway_runway', 'aeroway_taxiway') THEN
                    ST_Buffer(way, 0.5*width_max*NULLIF(!scale_denominator!*0.001*0.28,0), 'endcap=flat join=round')
                  WHEN feature IN ('highway_raceway') THEN
                    ST_Buffer(way, 0.5*width_max*NULLIF(!scale_denominator!*0.001*0.28,0))
                  ELSE
                    ST_Buffer(way, 0.5*(width_max - 2.0*casing_width)*NULLIF(!scale_denominator!*0.001*0.28,0))
                END AS way,
                'fill_unpaved' AS road_layer,
                feature,
                path_type,
                'no' AS intermittent,
                'no' AS seasonal,
                int_surface,
                int_tunnel,
                int_bridge,
                int_lanes,
                int_access,
                construction,
                service,
                link,
                'null' AS tc_type,
                width_lane,
                width_nominal,
                width_max,
                width,
                casing_width,
                layernotnull,
                osm_id,
                z_order
              FROM roads_all
              WHERE int_junction = 'no'
                AND int_tunnel = 'no'
                AND int_surface = 'unpaved'
                AND int_lane = 'no'
                AND
                  -- this is all the roads with a fill that is patterened for unpaved roads
                  feature IN (
                    'highway_motorway', 'highway_trunk', 'highway_primary', 'highway_secondary', 'highway_tertiary', 'highway_unclassified',
                    'highway_residential', 'highway_service', 'highway_road', 'highway_pedestrian', 'highway_living_street', 'highway_raceway',
                    'highway_busway', 'highway_bus_guideway',
                    'highway_platform', 'railway_platform', 'aeroway_runway', 'aeroway_taxiway')
                AND z(!scale_denominator!) >= 12
            UNION ALL
            SELECT -- junction_casing
                way,
                'junction_casing' AS road_layer,
                feature,
                path_type,
                'no' AS intermittent,
                'no' AS seasonal,
                int_surface,
                int_tunnel,
                int_bridge,
                int_lanes,
                int_access,
                construction,
                service,
                link,
                'null' AS tc_type,
                width_lane,
                width_nominal,
                width_max,
                width,
                casing_width,
                layernotnull,
                osm_id,
                z_order
              FROM roads_all
              WHERE int_junction != 'no' AND int_lane = 'no'
            UNION ALL
            SELECT -- junction_fill
                way,
                'junction_fill' AS road_layer,
                feature,
                path_type,
                'no' AS intermittent,
                'no' AS seasonal,
                int_surface,
                int_tunnel,
                int_bridge,
                int_lanes,
                int_access,
                construction,
                service,
                link,
                'null' AS tc_type,
                width_lane,
                width_nominal,
                width_max,
                width,
                casing_width,
                layernotnull,
                osm_id,
                z_order
              FROM roads_all
              WHERE int_junction != 'no' AND int_lane = 'no'
            UNION ALL
            SELECT -- fill_lanes
                way,
                'fill_lanes' AS road_layer,
                feature,
                path_type,
                'no' AS intermittent,
                'no' AS seasonal,
                int_surface,
                int_tunnel,
                int_bridge,
                int_lanes,
                int_access,
                construction,
                service,
                link,
                'null' AS tc_type,
                width_lane,
                width_nominal,
                width_max,
                width,
                casing_width,
                layernotnull,
                osm_id,
                z_order
              FROM roads_all
              WHERE int_junction = 'no'
                AND int_tunnel = 'no'
                AND int_lane != 'no'
                AND z(!scale_denominator!) >= 18
            UNION ALL
            SELECT -- parkings_lane
                way,
                'parkings_lane' AS road_layer,
                'amenity_parking' AS feature,
                'null' AS path_type,
                'null' AS intermittent,
                'null' AS seasonal,
                'null' AS int_surface,
                'no' AS int_tunnel,
                'no' AS int_bridge,
                'null' AS int_lanes,
                'null' AS int_access,
                'null' AS construction,
                'null' AS service,
                'no' AS link,
                'null' tc_type,
                0 AS width_lane,
                0 AS width_nominal,
                0 AS width_max,
                way_area/NULLIF(POW(!scale_denominator!*0.001*0.28,2),0) AS width,
                0 AS casing_width,
                COALESCE(layer,0) AS layernotnull,
                osm_id,
                z_order
              FROM planet_osm_polygon
              WHERE amenity = 'parking' AND (tags->'parking') = 'lane'
                AND building IS NULL
                AND way && !bbox!
                AND z(!scale_denominator!) >= 12
            UNION ALL
            SELECT -- centerline
                way,
                'centerline' AS road_layer,
                feature,
                path_type,
                'no' AS intermittent,
                'no' AS seasonal,
                int_surface,
                int_tunnel,
                int_bridge,
                int_lanes,
                int_access,
                construction,
                service,
                link,
                'null' AS tc_type,
                width_lane,
                width_nominal,
                width_max,
                width,
                casing_width,
                layernotnull,
                osm_id,
                z_order
              FROM roads_all
              WHERE int_junction = 'no'
                AND int_tunnel = 'no'
                AND int_lane = 'no'
                AND
                  feature IN ('highway_living_street', 'highway_pedestrian', 'highway_busway', 'highway_bus_guideway', 'aeroway_runway', 'aeroway_taxiway')
                AND z(!scale_denominator!) >= 15
            UNION ALL
            SELECT -- lanes
                way,
                'lanes' AS road_layer,
                feature,
                path_type,
                'no' AS intermittent,
                'no' AS seasonal,
                int_surface,
                int_tunnel,
                int_bridge,
                int_lanes,
                int_access,
                construction,
                service,
                link,
                'null' AS tc_type,
                width_lane,
                width_nominal,
                width_max,
                width,
                casing_width,
                layernotnull,
                osm_id,
                z_order
              FROM roads_all
              WHERE int_junction = 'no'
                AND int_tunnel = 'no'
                AND int_lane = 'no'
                AND int_lanes IS NOT NULL
                AND z(!scale_denominator!) >= 18
            UNION ALL
            SELECT -- access
                way,
                'access' AS road_layer,
                feature,
                path_type,
                'no' AS intermittent,
                'no' AS seasonal,
                int_surface,
                int_tunnel,
                int_bridge,
                int_lanes,
                int_access,
                construction,
                service,
                link,
                'null' AS tc_type,
                width_lane,
                width_nominal,
                width_max,
                width,
                casing_width,
                layernotnull,
                osm_id,
                z_order
              FROM roads_all
              WHERE int_junction = 'no'
                AND int_tunnel = 'no'
                AND int_access IS NOT NULL
                AND int_lane = 'no'
                AND z(!scale_denominator!) >= 15
            UNION ALL
            SELECT -- centerline_top
                way,
                'centerline_top' AS road_layer,
                feature,
                path_type,
                'no' AS intermittent,
                'no' AS seasonal,
                int_surface,
                int_tunnel,
                int_bridge,
                int_lanes,
                int_access,
                construction,
                service,
                link,
                'null' AS tc_type,
                width_lane,
                width_nominal,
                width_max,
                width,
                casing_width,
                layernotnull,
                osm_id,
                z_order
              FROM roads_all
              WHERE int_junction = 'no'
                AND int_tunnel = 'no'
                AND int_bridge IN ('ford', 'ford_node',  'mountain_pass')
                AND int_lane = 'no'
                AND z(!scale_denominator!) >= 15
            UNION ALL
            SELECT -- area_casing
                way,
                'area_casing' AS road_layer,
                feature,
                path_type,
                'no' AS intermittent,
                'no' AS seasonal,
                int_surface,
                int_tunnel,
                int_bridge,
                int_lanes,
                int_access,
                construction,
                service,
                link,
                'null' AS tc_type,
                0 AS width_lane,
                width_nominal,
                width_max,
                width,
                casing_width,
                layernotnull,
                osm_id,
                z_order
              FROM road_areas_all
              WHERE feature NOT IN ('aeroway_runway', 'aeroway_taxiway', 'aeroway_helipad')
            UNION ALL
            SELECT -- area_fill
                way,
                'area_fill' AS road_layer,
                feature,
                path_type,
                'no' AS intermittent,
                'no' AS seasonal,
                int_surface,
                int_tunnel,
                int_bridge,
                int_lanes,
                int_access,
                construction,
                service,
                link,
                'null' AS tc_type,
                0 AS width_lane,
                width_nominal,
                width_max,
                width,
                casing_width,
                layernotnull,
                osm_id,
                z_order
              FROM road_areas_all
            UNION ALL
            SELECT -- tc_casing
                way,
                'tc_casing' AS road_layer,
                feature,
                path_type,
                'no' AS intermittent,
                'no' AS seasonal,
                int_surface,
                int_tunnel,
                int_bridge,
                int_lanes,
                int_access,
                construction,
                service,
                link,
                tc_type,
                0 AS width_lane,
                0 AS width_nominal,
                0 AS width_max,
                width,
                casing_width,
                layernotnull,
                osm_id,
                z_order
              FROM tc_all
            UNION ALL
            SELECT -- tc_fill
                way,
                'tc_fill' AS road_layer,
                feature,
                path_type,
                'no' AS intermittent,
                'no' AS seasonal,
                int_surface,
                int_tunnel,
                int_bridge,
                int_lanes,
                int_access,
                construction,
                service,
                link,
                tc_type,
                0 AS width_lane,
                0 AS width_nominal,
                0 AS width_max,
                width,
                casing_width,
                layernotnull,
                osm_id,
                z_order
              FROM tc_all
            UNION ALL
            SELECT -- waterway_bridges_casing
                way,
                'waterway_bridges_casing' AS road_layer,
                ('waterway_' || waterway) AS feature,
                'null' AS path_type,
                tags->'intermittent' AS intermittent,
                tags->'seasonal' AS seasonal,
                'null' AS int_surface,
                CASE WHEN tunnel IN ('yes', 'culvert') THEN 'yes' ELSE 'no' END AS int_tunnel,
                'yes' AS int_bridge,
                'null' AS int_lanes,
                'null' AS int_access,
                'null' AS construction,
                'null' AS service,
                'no' AS link,
                'null' tc_type,
                0 AS width_lane,
                0 AS width_nominal,
                0 AS width_max,
                0 AS width,
                0 AS casing_width,
                COALESCE(layer,0) AS layernotnull,
                osm_id,
                z_order
              FROM planet_osm_line
              WHERE waterway IN ('river', 'canal', 'stream', 'drain', 'ditch', 'wadi')
                AND bridge IN ('yes', 'aqueduct')
                AND way && !bbox!
                AND z(!scale_denominator!) >= 12
            UNION ALL
            SELECT -- waterway_bridges_fill
                way,
                'waterway_bridges_fill' AS road_layer,
                ('waterway_' || waterway) AS feature,
                'null' AS path_type,
                tags->'intermittent' AS intermittent,
                tags->'seasonal' AS seasonal,
                'null' AS int_surface,
                CASE WHEN tunnel IN ('yes', 'culvert') THEN 'yes' ELSE 'no' END AS int_tunnel,
                'yes' AS int_bridge,
                'null' AS int_lanes,
                'null' AS int_access,
                'null' AS construction,
                'null' AS service,
                'no' AS link,
                'null' tc_type,
                0 AS width_lane,
                0 AS width_nominal,
                0 AS width_max,
                0 AS width,
                0 AS casing_width,
                COALESCE(layer,0) AS layernotnull,
                osm_id,
                z_order
              FROM planet_osm_line
              WHERE waterway IN ('river', 'canal', 'stream', 'drain', 'ditch', 'wadi')
                AND bridge IN ('yes', 'aqueduct')
                AND way && !bbox!
                AND z(!scale_denominator!) >= 12
            UNION ALL
            SELECT -- waterway_supplement
                way,
                'waterway_supplement' AS road_layer,
                ('waterway_' || waterway) AS feature,
                'null' AS path_type,
                tags->'intermittent' AS intermittent,
                tags->'seasonal' AS seasonal,
                'null' AS int_surface,
                CASE WHEN tunnel IN ('yes', 'culvert') THEN 'yes' ELSE 'no' END AS int_tunnel,
                'no' AS int_bridge,
                'null' AS int_lanes,
                'null' AS int_access,
                'null' AS construction,
                'null' AS service,
                'no' AS link,
                'null' tc_type,
                0 AS width_lane,
                0 AS width_nominal,
                0 AS width_max,
                0 AS width,
                0 AS casing_width,
                COALESCE(layer,0) AS layernotnull,
                osm_id,
                z_order
              FROM planet_osm_line
              WHERE waterway IN ('river', 'canal', 'stream', 'drain', 'ditch', 'wadi')
                AND (bridge IS NULL OR bridge NOT IN ('yes', 'aqueduct'))
                AND way && !bbox!
                AND z(!scale_denominator!) >= 14
            UNION ALL
            SELECT -- line_barriers
                way,
                'line_barriers' AS road_layer,
                feature,
                'null' AS path_type,
                'null' AS intermittent,
                'null' AS seasonal,
                'null' AS int_surface,
                'no' AS int_tunnel,
                'no' AS int_bridge,
                'null' AS int_lanes,
                CASE WHEN height <= 0.5 THEN 'yes' ELSE 'no' END AS int_access,
                'null' AS construction,
                'null' AS service,
                'no' AS link,
                'null' tc_type,
                0 AS width_lane,
                0 AS width_nominal,
                0 AS width_max,
                width,
                0 AS casing_width,
                COALESCE(layer,0) AS layernotnull,
                osm_id,
                z_order
              FROM line_barriers_all
            UNION ALL
            SELECT -- line_barrier_areas
                ST_Difference(
                  ST_Reverse(ST_OffsetCurve(way, width*0.5*NULLIF(!scale_denominator!*0.001*0.28,0), 'join=round')),
                  COALESCE(
                    (SELECT
                        ST_Union(ST_Buffer(way, width*0.5*NULLIF(!scale_denominator!*0.001*0.28,0), 'endcap=flat join=round'))
                      FROM line_barriers_all
                      WHERE feature IN ('barrier_wall', 'barrier_city_wall', 'historic_citywalls')
                        AND osm_id != l1.osm_id
                    ),
                    ST_SetSRID('GEOMETRYCOLLECTION EMPTY'::geometry, 3857)
                  )
                ) AS way,
                'line_barrier_areas' AS road_layer,
                feature,
                'inner' AS path_type,
                'null' AS intermittent,
                'null' AS seasonal,
                'null' AS int_surface,
                'no' AS int_tunnel,
                'no' AS int_bridge,
                'null' AS int_lanes,
                CASE WHEN height <= 0.5 THEN 'yes' ELSE 'no' END AS int_access,
                'null' AS construction,
                'null' AS service,
                'no' AS link,
                'null' tc_type,
                0 AS width_lane,
                0 AS width_nominal,
                0 AS width_max,
                width,
                0 AS casing_width,
                COALESCE(layer,0) AS layernotnull,
                osm_id,
                z_order
              FROM line_barriers_all AS l1
                WHERE z(!scale_denominator!) >= 18 AND width >= 2.4 AND feature IN ('barrier_wall', 'barrier_city_wall', 'historic_citywalls')
            UNION ALL
            SELECT -- line_barrier_areas
                ST_Difference(
                  ST_Reverse(ST_OffsetCurve(way, -width*0.5*NULLIF(!scale_denominator!*0.001*0.28,0), 'join=round')),
                  COALESCE(
                    (SELECT
                        ST_Union(ST_Buffer(way, width*0.5*NULLIF(!scale_denominator!*0.001*0.28,0), 'endcap=flat join=round'))
                      FROM line_barriers_all
                      WHERE feature IN ('barrier_wall', 'barrier_city_wall', 'historic_citywalls')
                        AND osm_id != l1.osm_id
                    ),
                    ST_SetSRID('GEOMETRYCOLLECTION EMPTY'::geometry, 3857)
                  )
                ) AS way,
                'line_barrier_areas' AS road_layer,
                feature,
                'outer' AS path_type,
                'null' AS intermittent,
                'null' AS seasonal,
                'null' AS int_surface,
                'no' AS int_tunnel,
                'no' AS int_bridge,
                'null' AS int_lanes,
                CASE WHEN height <= 0.5 THEN 'yes' ELSE 'no' END AS int_access,
                'null' AS construction,
                'null' AS service,
                'no' AS link,
                'null' tc_type,
                0 AS width_lane,
                0 AS width_nominal,
                0 AS width_max,
                width,
                0 AS casing_width,
                COALESCE(layer,0) AS layernotnull,
                osm_id,
                z_order
              FROM line_barriers_all AS l1
                WHERE z(!scale_denominator!) >= 18 AND width >= 2.4 AND feature IN ('barrier_wall', 'barrier_city_wall', 'historic_citywalls')
            UNION ALL
            SELECT -- ferry_routes
                way,
                'ferry_routes' AS road_layer,
                'ferry' AS feature,
                'null' AS path_type,
                'null' AS intermittent,
                'null' AS seasonal,
                'null' AS int_surface,
                'no' AS int_tunnel,
                'no' AS int_bridge,
                'null' AS int_lanes,
                'null' AS int_access,
                'null' AS construction,
                'null' AS service,
                'no' AS link,
                'null' tc_type,
                0 AS width_lane,
                0 AS width_nominal,
                0 AS width_max,
                0 AS width,
                0 AS casing_width,
                0 AS layernotnull,
                osm_id,
                z_order
              FROM planet_osm_line
              WHERE route = 'ferry'
                AND way && !bbox!
            UNION ALL
            SELECT -- landuse_overlay
                way,
                'landuse_overlay' AS road_layer,
                COALESCE(
                  ('landuse_' || landuse),
                  ('military_' || military)
                ) AS feature,
                'null' AS path_type,
                'null' AS intermittent,
                'null' AS seasonal,
                'null' AS int_surface,
                'no' AS int_tunnel,
                'no' AS int_bridge,
                'null' AS int_lanes,
                'null' AS int_access,
                'null' AS construction,
                'null' AS service,
                'no' AS link,
                'null' tc_type,
                0 AS width_lane,
                0 AS width_nominal,
                0 AS width_max,
                way_area/NULLIF(POW(!scale_denominator!*0.001*0.28,2),0) AS width,
                0 AS casing_width,
                0 AS layernotnull,
                osm_id,
                z_order
              FROM planet_osm_polygon
              WHERE (landuse = 'military' OR military = 'danger_area')
                AND building IS NULL
                AND way && !bbox!
            ) AS roads_sublayers
          -- this is the full ordering of the roads stack
          ORDER BY
            CASE
              WHEN int_bridge IN ('yes') THEN layernotnull + 100
              WHEN int_tunnel NOT IN ('no') THEN layernotnull - 100
              ELSE 0
            END,
            -- this defines the ordering of layers as far as it has priority over the
            -- layer and z_oder of normal non-bridge and non-tunnel features, that is:
            --  * the non-roads layers
            --  * the casing-background-fill progression
            -- ordering beyond that is defined later because
            -- it is subordinate to the layer and z_oder
            CASE
              -- this is bridges only so it comes after all the non-bridge layers and before the road bridge layers
              WHEN road_layer = 'waterway_supplement' THEN -1
              WHEN road_layer = 'waterway_bridges_casing' THEN 0
              WHEN road_layer = 'waterway_bridges_fill' THEN 1
              WHEN road_layer = 'landuse_overlay' THEN 2
              WHEN road_layer = 'line_barriers' THEN 3
              WHEN road_layer = 'line_barrier_areas' THEN 4
              WHEN road_layer = 'ferry_routes' THEN 5
              WHEN road_layer = 'tc_casing' THEN 6
              WHEN road_layer = 'area_casing' THEN 6
              WHEN road_layer = 'junction_casing' THEN 6
              WHEN road_layer = 'casing' THEN 6
              WHEN road_layer = 'background' THEN 7
              WHEN road_layer = 'background_unpaved' THEN 7
              WHEN road_layer = 'area_fill' THEN 8
              WHEN road_layer = 'junction_fill' THEN 8
              WHEN road_layer = 'fill' THEN 8
              WHEN road_layer = 'fill_unpaved' THEN 8
              WHEN road_layer = 'fill_lanes' THEN 8
              WHEN road_layer = 'parkings_lane' THEN 8
              WHEN road_layer = 'centerline' THEN 8
              WHEN road_layer = 'lanes' THEN 8
              WHEN road_layer = 'access' THEN 8
              WHEN road_layer = 'tc_fill' THEN 8
              WHEN road_layer = 'centerline_top' THEN 9
            END,
            layernotnull,
            z_order,
            CASE
              WHEN road_layer = 'waterway_supplement' THEN -1
              WHEN road_layer = 'waterway_bridges_casing' THEN 0
              WHEN road_layer = 'waterway_bridges_fill' THEN 1
              WHEN road_layer = 'landuse_overlay' THEN 2
              WHEN road_layer = 'line_barriers' THEN 3
              WHEN road_layer = 'line_barrier_areas' THEN 4
              WHEN road_layer = 'ferry_routes' THEN 5
              WHEN road_layer = 'tc_casing' THEN 6
              WHEN road_layer = 'area_casing' THEN 7
              WHEN road_layer = 'junction_casing' THEN 8
              WHEN road_layer = 'casing' THEN 9
              WHEN road_layer = 'background' THEN 10
              WHEN road_layer = 'background_unpaved' THEN 10
              WHEN road_layer = 'area_fill' THEN 11
              WHEN road_layer = 'junction_fill' THEN 12
              WHEN road_layer = 'fill' THEN 13
              WHEN road_layer = 'fill_unpaved' THEN 14
              WHEN road_layer = 'fill_lanes' THEN 15
              WHEN road_layer = 'parkings_lane' THEN 16
              WHEN road_layer = 'centerline' THEN 17
              WHEN road_layer = 'lanes' THEN 18
              WHEN road_layer = 'access' THEN 19
              WHEN road_layer = 'tc_fill' THEN 20
              WHEN road_layer = 'centerline_top' THEN 21
            END,
            CASE
              WHEN substr(feature, 1, 16) = 'highway_sidewalk' THEN 0
              WHEN feature = 'highway_lane_parking' THEN 1
              WHEN feature = 'highway_lane_cycle' THEN 2
              WHEN feature = 'highway_lane_bus' THEN 3
              ELSE 4
            END,
            -- order by how permissive it is to the target map user
            CASE
              WHEN int_access IN ('no') THEN 0
              WHEN int_access IN ('bus') THEN 1
              WHEN int_access IN ('foot') THEN 2
              WHEN int_access IN ('horse') THEN 3
              WHEN int_access IN ('bicycle') THEN 4
              WHEN int_access IN ('vehicle') THEN 5
              WHEN int_access IN ('light') THEN 6
              WHEN int_access IN ('bus+light') THEN 7
              WHEN int_access IN ('foot+light') THEN 8
              WHEN int_access IN ('horse+light') THEN 9
              WHEN int_access IN ('bicycle+light') THEN 10
              WHEN int_access IN ('vehicle+light') THEN 11
              ELSE 10
            END,
            CASE WHEN int_surface IN ('unpaved') THEN 0 ELSE 1 END,
            CASE WHEN int_bridge IN ('mountain_pass', 'ford_node') THEN 1 ELSE 0 END,
            osm_id
        ) AS roads_sql
    properties:
      minzoom: 10
