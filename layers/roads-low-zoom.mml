# ---------------------------------------------------------------------------
#  roads-low-zoom.mml
#
#  low zoom roads layer
#
#  to be processed with assemble_project.py
#
#  Copyright 2012-2023 by OSM-Carto contributors
#  Copyright 2017-2023 by Christoph Hormann <chris_hormann@gmx.de>
# ---------------------------------------------------------------------------
#  This file is part of the OSM-Carto alternative colors map style.
#
#  OSM-Carto alternative colors is an open design and free software project
#  You can use, modify and/or redistribute it under the terms of the
#  following licenses:
#
#  Design components of the project are subject to the Creative Commons
#  Attribution ShareAlike 4.0 (CC BY-SA 4.0) License.
#
#  Software components of the project are subject to the GNU Affero General
#  Public License published by the Free Software Foundation, either
#  version 3 of the License, or (at your option) any later version.
#
#  OSM-Carto alternative colors is distributed in the hope that it will be
#  useful, but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero
#  General Public License and the Creative Commons Attribution ShareAlike
#  4.0 (CC BY-SA 4.0) License for more details.
#
#  You should have received a copy of the Creative Commons Attribution
#  ShareAlike 4.0 (CC BY-SA 4.0) License along with OSM-Carto alternative
#  colors. If not, see
#  <https://creativecommons.org/licenses/by-sa/4.0/legalcode>.
#
#  You should have also received a copy of the GNU Affero General Public
#  License. If not, see <https://www.gnu.org/licenses/>.
# ---------------------------------------------------------------------------
  - id: roads-low-zoom
    geometry: linestring
    <<: *extents
    Datasource:
      <<: *osm2pgsql
      geometry_table: planet_osm_roads
      table: |-
        (SELECT
            way,
            road_layer,
            feature,
            int_surface,
            int_tunnel,
            int_bridge,
            link,
            width_nominal,
            width
          FROM
            (WITH roads_all AS
              (SELECT
                  way,
                  COALESCE(
                    ('highway_' || (CASE WHEN substr(highway, length(highway)-4, 5) = '_link' THEN substr(highway, 0, length(highway)-4) ELSE highway end)),
                    ('railway_' || (CASE WHEN (railway = 'rail' AND service IN ('spur', 'siding', 'yard')) THEN 'INT-spur-siding-yard' 
                                         WHEN railway IN ('rail', 'tram', 'light_rail', 'funicular', 'narrow_gauge') THEN railway ELSE NULL END))
                  ) AS feature,
                  CASE WHEN surface IN ('unpaved', 'compacted', 'dirt', 'earth', 'fine_gravel', 'grass', 'grass_paver', 'gravel', 'ground',
                                        'mud', 'pebblestone', 'salt', 'sand', 'woodchips', 'clay') THEN 'unpaved'
                    WHEN surface IN ('paved', 'asphalt', 'cobblestone', 'cobblestone:flattened', 'sett', 'concrete', 'concrete:lanes',
                                        'concrete:plates', 'paving_stones', 'metal', 'wood') THEN 'paved'
                    ELSE NULL
                  END AS int_surface,
                  CASE WHEN tunnel = 'yes' OR tunnel = 'building_passage' OR covered = 'yes' THEN 'yes' ELSE 'no' END AS int_tunnel,
                  CASE WHEN bridge IN ('yes', 'boardwalk', 'cantilever', 'covered', 'low_water_crossing', 'movable', 'trestle', 'viaduct') THEN 'yes' ELSE 'no' END AS int_bridge,
                  CASE WHEN substr(highway, length(highway)-4, 5) = '_link' THEN 'yes' ELSE 'no' END AS link,
                  carto_highway_line_width(COALESCE(highway, railway), z(!scale_denominator!)) AS width_nominal,
                  z_order,
                  osm_id
                FROM planet_osm_roads
                WHERE highway IS NOT NULL
                  OR (railway IS NOT NULL AND railway != 'preserved'
                    AND (service IS NULL OR service NOT IN ('spur', 'siding', 'yard'))))
              SELECT
                  way,
                  'casing' AS road_layer,
                  feature,
                  int_surface,
                  int_tunnel,
                  int_bridge,
                  link,
                  width_nominal,
                  0.0 AS width,
                  0.0 AS casing_width,
                  z_order,
                  osm_id
                FROM roads_all
              UNION ALL
              SELECT
                  way,
                  'fill' AS road_layer,
                  feature,
                  int_surface,
                  int_tunnel,
                  int_bridge,
                  link,
                  width_nominal,
                  0.0 AS width,
                  0.0 AS casing_width,
                  z_order,
                  osm_id
                FROM roads_all) AS features
          ORDER BY
            z_order,
            osm_id
        ) AS roads_low_zoom
    properties:
      minzoom: 5
      maxzoom: 9
