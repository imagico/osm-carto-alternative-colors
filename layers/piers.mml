# ---------------------------------------------------------------------------
#  piers.mml
#
#  piers layers
#
#  to be processed with assemble_project.py
#
#  Copyright 2012-2023 by OSM-Carto contributors
#  Copyright 2017-2023 by Christoph Hormann <chris_hormann@gmx.de>
# ---------------------------------------------------------------------------
#  This file is part of the OSM-Carto alternative colors map style.
#
#  OSM-Carto alternative colors is an open design and free software project
#  You can use, modify and/or redistribute it under the terms of the
#  following licenses:
#
#  Design components of the project are subject to the Creative Commons
#  Attribution ShareAlike 4.0 (CC BY-SA 4.0) License.
#
#  Software components of the project are subject to the GNU Affero General
#  Public License published by the Free Software Foundation, either
#  version 3 of the License, or (at your option) any later version.
#
#  OSM-Carto alternative colors is distributed in the hope that it will be
#  useful, but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero
#  General Public License and the Creative Commons Attribution ShareAlike
#  4.0 (CC BY-SA 4.0) License for more details.
#
#  You should have received a copy of the Creative Commons Attribution
#  ShareAlike 4.0 (CC BY-SA 4.0) License along with OSM-Carto alternative
#  colors. If not, see
#  <https://creativecommons.org/licenses/by-sa/4.0/legalcode>.
#
#  You should have also received a copy of the GNU Affero General Public
#  License. If not, see <https://www.gnu.org/licenses/>.
# ---------------------------------------------------------------------------
  - id: piers-poly
    geometry: polygon
    <<: *extents
    Datasource:
      <<: *osm2pgsql
      table: |-
        (SELECT
            way,
            man_made,
            CASE WHEN tags->'mooring' IN('yes', 'private', 'commercial', 'cruise', 'ferry', 'yacht', 'guest') THEN
              'yes'
            ELSE 
              'no'
            END AS mooring,
            tags->'material' AS material,
            way_area/NULLIF(POW(!scale_denominator!*0.001*0.28,2),0) AS way_pixels
          FROM planet_osm_polygon
          WHERE man_made IN ('pier', 'breakwater', 'groyne')
        ) AS piers_poly
    properties:
      cache-features: true
      minzoom: 12
  - id: piers-line
    <<: *extents
    Datasource:
      <<: *osm2pgsql
      geometry_table: planet_osm_line
      table: |-
        (SELECT
            way,
            man_made,
            width,
            mooring,
            material
          FROM
            (WITH piers_raw AS
              (SELECT
                  way,
                  man_made,
                  GREATEST(
                    carto_barrier_line_width(
                      man_made,
                      z(!scale_denominator!)
                    ),
                    carto_pier_line_width_mapped(
                      man_made,
                      tags->'width',
                      !bbox!, !scale_denominator!
                    )
                  ) AS width,
                  CASE WHEN tags->'mooring' IN('yes', 'private', 'commercial', 'cruise', 'ferry', 'yacht', 'guest') THEN
                    'yes'
                  ELSE 
                    'no'
                  END AS mooring,
                  tags->'material' AS material
                FROM planet_osm_line
                WHERE man_made IN ('pier', 'breakwater', 'groyne')
                  AND way && !bbox!
              )
            SELECT
                way,
                man_made,
                width,
                mooring,
                material
              FROM piers_raw
            UNION ALL
            SELECT
                (ST_Dump(
                  CASE
                    WHEN length < 3.0*width THEN ST_LineInterpolatePoint(way, 0.5)
                    WHEN length < 5.0*width THEN ST_Collect(ST_LineInterpolatePoint(way, 0.25), ST_LineInterpolatePoint(way, 0.75))
                    ELSE ST_Collect(ARRAY[ST_LineInterpolatePoint(way, 0.2), ST_LineInterpolatePoint(way, 0.5), ST_LineInterpolatePoint(way, 0.8)])
                  END
                )).geom AS way,
                'pier_symbol' AS man_made,
                (CASE WHEN length < width THEN length ELSE width END) AS width,
                mooring,
                material
              FROM
                (SELECT
                    way,
                    ST_Length(way)/NULLIF(!scale_denominator!*0.001*0.28,0) AS length,
                    width,
                    mooring,
                    material
                  FROM piers_raw
                  WHERE man_made = 'pier' AND width >= 10 AND mooring = 'yes'
                ) AS piers_wide_mooring
            ) AS _
          ORDER BY
            -- symbol nodes last so symbols are drawn above the line signatures
            CASE WHEN man_made = 'pier_symbol' THEN 2 ELSE 1 END
        ) AS piers_line
    properties:
      cache-features: true
      minzoom: 12
