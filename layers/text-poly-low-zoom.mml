# ---------------------------------------------------------------------------
#  text-poly-low-zoom.mml
#
#  low zoom polygon labels layer
#
#  to be processed with assemble_project.py
#
#  Copyright 2012-2023 by OSM-Carto contributors
#  Copyright 2017-2023 by Christoph Hormann <chris_hormann@gmx.de>
# ---------------------------------------------------------------------------
#  This file is part of the OSM-Carto alternative colors map style.
#
#  OSM-Carto alternative colors is an open design and free software project
#  You can use, modify and/or redistribute it under the terms of the
#  following licenses:
#
#  Design components of the project are subject to the Creative Commons
#  Attribution ShareAlike 4.0 (CC BY-SA 4.0) License.
#
#  Software components of the project are subject to the GNU Affero General
#  Public License published by the Free Software Foundation, either
#  version 3 of the License, or (at your option) any later version.
#
#  OSM-Carto alternative colors is distributed in the hope that it will be
#  useful, but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero
#  General Public License and the Creative Commons Attribution ShareAlike
#  4.0 (CC BY-SA 4.0) License for more details.
#
#  You should have received a copy of the Creative Commons Attribution
#  ShareAlike 4.0 (CC BY-SA 4.0) License along with OSM-Carto alternative
#  colors. If not, see
#  <https://creativecommons.org/licenses/by-sa/4.0/legalcode>.
#
#  You should have also received a copy of the GNU Affero General Public
#  License. If not, see <https://www.gnu.org/licenses/>.
# ---------------------------------------------------------------------------
  - id: text-poly-low-zoom
    class: text-low-zoom
    geometry: polygon
    <<: *extents
    Datasource:
      <<: *osm2pgsql
      table: |-
        (SELECT
            way,
            way_pixels,
            feature,
            name_label[1] AS name,
            name_label[3] AS font,
            is_building
          FROM
            (SELECT
                way,
                way_area/NULLIF(POW(!scale_denominator!*0.001*0.28,2),0) AS way_pixels,
                COALESCE(
                  'landuse_' || CASE WHEN landuse IN ('forest', 'military') THEN landuse ELSE NULL END,
                  'natural_' || CASE WHEN "natural" IN ('wood', 'glacier', 'sand', 'scree', 'shingle', 'bare_rock') THEN "natural" ELSE NULL END,
                  'place_' || CASE WHEN place IN ('island') THEN place ELSE NULL END
                ) AS feature,
                carto_label_name(way, name, tags, E'\n') AS name_label,
                'no' AS is_building
              FROM planet_osm_polygon
              WHERE (landuse IN ('forest', 'military')
                  OR "natural" IN ('wood', 'glacier', 'sand', 'scree', 'shingle', 'bare_rock')
                  OR "place" IN ('island'))
                AND building IS NULL
             UNION ALL
             SELECT
                ST_ClosestPoint(oway,ST_PointOnSurface(way)),
                ST_Area(ST_Envelope(oway))/NULLIF(POW(!scale_denominator!*0.001*0.28,2),0) AS way_pixels,
                'place_archipelago' AS feature,
                name_label,
                'no' AS is_building
             FROM
               (SELECT
                  (ST_Dump(
                    -- this detects multipolygons extending over the 180 degree meridian to split them
                    CASE WHEN (ST_XMax(way)-ST_XMin(way)) < 20037508 THEN
                      ST_ConvexHull(way)
                    ELSE
                      -- splits the polygon into the two hemisphere parts
                      ST_Collect(
                        ST_ConvexHull(ST_Intersection(way, ST_SetSRID(ST_GeomFromText('POLYGON((-20037508 -20037508, -20037508 20037508, 0 20037508, 0 -20037508, -20037508 -20037508))'), 3857))),
                        ST_ConvexHull(ST_Intersection(way, ST_SetSRID(ST_GeomFromText('POLYGON((0 -20037508, 0 20037508, 20037508 20037508, 20037508 -20037508, 0 -20037508))'), 3857)))
                      )
                    END
                  )).geom AS way,
                  way AS oway,
                  carto_label_name(way, name, tags, E'\n') AS name_label
                FROM planet_osm_polygon
                WHERE "place" IN ('archipelago')
                  AND building IS NULL
              ) AS archipelagos
            ) AS labels
          WHERE name_label[1] IS NOT NULL
          ORDER BY way_pixels DESC
        ) AS text_poly_low_zoom
    properties:
      minzoom: 4
      maxzoom: 9
